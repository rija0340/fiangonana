{% extends 'baseAdminLTE.html.twig' %}
{% block title %}Filadelfia
{% endblock %}
{% block title_page %}Famille - mambra
{% endblock %}
{% block current_page %}rejistra liste
{% endblock %}
{% block stylesheets %}
	<!-- Datatables -->
	<link href="{{asset('vendors/datatables.net-bs/css/dataTables.bootstrap.min.css')}}" rel="stylesheet">
	<link href="{{asset('vendors/datatables.net-buttons-bs/css/buttons.bootstrap.min.css')}}" rel="stylesheet">
	<link href="{{asset('vendors/datatables.net-fixedheader-bs/css/fixedHeader.bootstrap.min.css')}}" rel="stylesheet">
	<link href="{{asset('vendors/datatables.net-responsive-bs/css/responsive.bootstrap.min.css')}}" rel="stylesheet">
	<link href="{{asset('vendors/datatables.net-scroller-bs/css/scroller.bootstrap.min.css')}}" rel="stylesheet">
	<link href="{{asset('css/datatables_pagination.css')}}" rel="stylesheet">
	    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
        <style>
      .data-table {
        width: 100%;
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 0.9em;
        font-family: sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
      }
      .data-table thead tr {
        background-color: #009879;
        color: #ffffff;
        text-align: left;
      }
      .data-table th,
      .data-table td {
        padding: 12px 15px;
      }
      .data-table tbody tr {
        border-bottom: 1px solid #dddddd;
      }
      .data-table tbody tr:nth-of-type(even) {
        background-color: #f3f3f3;
      }
      .data-table tbody tr:last-of-type {
        border-bottom: 2px solid #009879;
      }
      .menu-lateral{
    min-height: 200px;
    padding: 10px;
    margin-top: 10px;
		    margin-bottom: 10px;
		}
		.activate{
		    background-color: red;
		    color: white   ;
		}
		    /* Add any custom styles for the modal here */
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 5px;
      max-width: 600px;
      width: 100%;
    }
    </style>
{% endblock %}
{% block content %}

<div id="root"></div>
	<!-- Main content -->
	<section class="content">
		<div
			class="container-fluid">
			<!-- Small boxes (Stat box) -->
			<div class="row">
				<div
					class="col-lg-2 col-6">
					<!-- small box -->
					<div class="small-box bg-info">
						<div class="inner">
							<h5>Mambra rehetra
							</h5>
							<h3>{{mambras|length}}</h3>
						</div>
					</div>
				</div>
				<!-- ./col -->
				<div
					class="col-lg-2 col-6">
					<!-- small box -->
					<div class="small-box bg-success">
						<div class="inner">
							<h5>Famille rehetra
							</h5>
							<h3>{{familles|length}}</h3>
						</div>
					</div>
				</div>
				<!-- ./col -->
				<div
					class="col-lg-2 col-6">
					<!-- small box -->
					<div class="small-box bg-warning">
						<div class="inner">
							<h5>Mambra baptisé
							</h5>
							<h3>
								{{mambraBaptises|length}}</h3>

						</div>
					</div>
				</div>
				<!-- ./col -->
				<div
					class="col-lg-2 col-6">
					<!-- small box -->
					<div class="small-box bg-secondary">
						<div class="inner">
							<h5>Baptisé par sexe
							</h5>
							<h5>
								M :
								{{mambraBaptisesM|length}}, F :
								{{mambraBaptisesF|length}}</h5>

						</div>
					</div>
				</div>
				<!-- ./col -->
				<!-- ./col -->

			</div>
			<!-- /.row -->

		</div>
		<!-- /.container-fluid -->
	</section>
	<!-- /.content -->

	<div class="card overflow-scroll">
		<div class="card-header">
			<div class="d-flex">
				<div class="mr-auto p-2 bd-highlight"></div>
				<div class="row">
					<div class="mr-2">
						<a id="btn_modal_importer" href="{{path('importer_mambra')}}" class="btn btn-outline-success btn_modal">Importer mambra</a>
						<a id="btn_modal_ajout_mambra" href="{{ path('creer_mambra') }}" class="btn btn-outline-danger btn_modal">Ajouter mambra</a>
						<a id="btn_modal_ajout_famille" href="{{ path('creer_famille') }}" class="btn btn-outline-dark btn_modal">Ajouter famille</a>
					</div>
				</div>
			</div>
		</div>
		<!-- /.card-header -->
		<div class="card-body">
			<table class="table  table-bordered mb-5" id="datatable">
				<thead>
					<tr class="text-center">
						<th>Nom de famille</th>
						<th>
							Nbr personnes</th>
						<th>
							details</th>
						<th>Action sur famille</th>
					</tr>
				</thead>
				<tbody>
					{% for famille in familles %}
						<tr class="">
							<td>
								<div class="text-uppercase text-bold">
									<strong>
										{{famille.nom}}
									</strong>
								</div>
							</td>
							<td class="text-center">{{famille.mambras|length}}
							</td>
							<td>
								<table>
									<tbody>
										{% for mambra in famille.mambras %}
											<tr>
												<td>{{mambra.nom}}
													{{mambra.prenom}}</td>
												<td>
													{% if mambra.sexe == "masculin" %}
														<span class="badge badge-primary">(M)</span>
													{% else %}
														<span class="badge badge-danger">(F)</span>
													{% endif %}
												</td>
												<td>
													{% if mambra.baptise %}
														<span class="badge badge-secondary">baptisé</span>
														{% else %}
													{% endif %}
												</td>
												<td>
													<div class="ml-auto">

														<div class="dropright">
															<button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
																<i class="fa fa-list"></i>
															</button>
															<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
																<a class="dropdown-item btn_modal" id="btn_modal_show_mambra" href="{{path('details_mambra', {'id' : mambra.id})}}" class="btn btn-link">Détails
																	{{mambra.nom}}
																</a>
																<a class="dropdown-item btn_modal" id="btn_modal_edit_mambra" href="{{path('modifier_mambra', {'id' : mambra.id})}}" class="btn btn-link">Modifier
																	{{mambra.nom}}
																</a>
																<form method="post" action="{{path('supprimer_mambra' , { 'id' : mambra.id })}}" style="display : inline-block" onsubmit="return confirm('Voulez vous vraiment supprimer cette personne ?');">
																	<input type="hidden" name="_method" value="DELETE">
																	<input type="hidden" name="_token" value="{{ csrf_token('delete' ~ mambra.id) }}">
																	<button class="btn btn-danger">
																		Supprimer
																		{{mambra.nom}}
																	</button>
																</form>
															</div>
														</div>
													</div>
												</td>
											</tr>
										{% endfor %}
									</tbody>
								</table>
							</td>
							<td>
								{# operations pour famille entity #}
								<div class="dropdown">
									<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
										<i class="fa fa-list"></i>
									</button>
									<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
										<a class="dropdown-item btn_modal" href="{{path('details_famille', {'id' : famille.id})}}" class="btn btn-success">
											Détails famille
										</a>

										<a class="dropdown-item btn_modal" id="btn_modal_modifier_famille" href="{{path('modifier_famille', {'id' : famille.id})}}">
											Modifier famille
										</a>

										<a class="dropdown-item btn_modal" id="btn_modal_ajouter_membre_famille" href="{{path('ajout_membre_famille', {'id' : famille.id})}}">
											Ajout membre famille
										</a>
										<form method="post" action="{{path('supprimer_famille' , { 'id' : famille.id })}}" style="display : inline-block" onsubmit="return confirm('Voulez vous vraiment supprimer cette famille ?');">
											<input type="hidden" name="_method" value="DELETE">
											<input type="hidden" name="_token" value="{{ csrf_token('delete' ~ famille.id) }}">
											<button class="btn btn-danger">
												Supprimer famille
											</button>
										</form>
									</div>
								</div>
							</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
		<!-- /.card-body -->
	</div>

	<!-- Button trigger modal -->
	<button id="btn-launch-modal" type="button" class="btn btn-primary" style="display : none" data-toggle="modal" data-target="#modalAjoutMembreFamille">
		Launch demo modal
	</button>
	{% include "famille-mambra/modalAjoutMembreFamille.html.twig" %}
{% endblock %}
{% block javascripts %}
	<script src="{{asset('js/filadelfia/modal.js')}}"></script>

	<!-- Datatables -->
	<script src="{{asset('vendors/datatables.net/js/jquery.dataTables.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-bs/js/dataTables.bootstrap.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-buttons/js/dataTables.buttons.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-buttons-bs/js/buttons.bootstrap.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-buttons/js/buttons.flash.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-buttons/js/buttons.html5.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-buttons/js/buttons.print.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-keytable/js/dataTables.keyTable.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-responsive/js/dataTables.responsive.min.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-responsive-bs/js/responsive.bootstrap.js')}}"></script>
	<script src="{{asset('vendors/datatables.net-scroller/js/dataTables.scroller.min.js')}}"></script>
	<script src="{{asset('vendors/jszip/dist/jszip.min.js')}}"></script>
	<script src="{{asset('vendors/pdfmake/build/pdfmake.min.js')}}"></script>
	<script src="{{asset('vendors/pdfmake/build/vfs_fonts.js')}}"></script>
	<script src="{{asset('js/filadelfia/index_filadelfia_datatable.fr.js')}}"></script>
	<script src="{{asset('js/utils/bs-custom-file-input.min.js')}}"></script>
	<script>
		$(function () {
bsCustomFileInput.init();
});
	</script>
	<script type="text/babel">
     function DataTable() {
     	  const trancheAgeOptions = [
			    { value: "0_2", label: "0-2" },
			    { value: "3_4", label: "3-4" },
			    { value: "5_12", label: "5-12" },
			    { value: "13_15", label: "13-15" },
			    { value: "16_18", label: "16-18" },
			    { value: "19_35", label: "19-35" },
			    { value: "35+", label: "35+" },
			  ];
        const [filters, setFilters] = React.useState({
				  nom: "",
				  prenom: "",
				  sexe: "",
				  baptise: "",
				  trancheAge: [],
				  orderByName: ""
				});

        //début modal 
				 const [isModalOpen, setIsModalOpen] = React.useState(false);
      		const openModal = () => setIsModalOpen(true);
     			const closeModal = () => setIsModalOpen(false);
     		// fin modal
        const { data: mambras, loading: loadingMambra, error: errorMambra } = useFetchData("http://localhost:8000/apip/mambras", filters);

        // React.useEffect(() => {
        //   fetchData();
        // }, []);


    function useFetchData(url, searchParams = null) {
		  const [data, setData] = React.useState([]);
		  const [loading, setLoading] = React.useState(true);
		  const [error, setError] = React.useState(null);

			  React.useEffect(() => {
			    let cancel = false;
			    async function fetchData() {
			      setLoading(true);
			      try {
			        let fullUrl = url + "?";
			        if (searchParams) {
			          const queryParams = new URLSearchParams();
			          for (const [key, value] of Object.entries(searchParams)) {
			            if (value === "") continue;
			            if (key === "trancheAge" && Array.isArray(value)) {
			              value.forEach(age => queryParams.append("trancheAge[]", age));
			            } else if (key === "orderByName") {
			              queryParams.append("order[prenom]", value);
			            } else {
			              queryParams.append(key, value);
			            }
			          }
			          fullUrl += queryParams.toString();
			        }

			        const response = await fetch(fullUrl);
			        if (!cancel) {
			          if (response.ok) {
			            const result = await response.json();
			            setData(Array.isArray(result["hydra:member"]) ? result["hydra:member"] : [result]);
			          } else {
			            throw new Error(`HTTP Error: ${response.status}`);
			          }
			        }
			      } catch (err) {
			        if (!cancel) setError(err.message);
			      } finally {
			        if (!cancel) setLoading(false);
			      }
			    }

			    fetchData();
			    return () => (cancel = true);
			  }, [url, searchParams]);

			  return { data, loading, error };
			}

    const listeMambra = mambras.map((item) => {
		    return (
		      <tr key={item.id}>
		        <td className="align-middle">{item.nom}</td>
		        <td className="align-middle">{item.prenom}</td>
		        <td className="align-middle">{item.sexe}</td>
		        <td className="align-middle">
		          <span className={`badge ${item.baptise ? 'bg-success' : 'bg-secondary'}`}>
		            {item.baptise ? 'Yes' : 'No'}
		          </span>
		        </td>
			        <td className="align-middle">
			          <div className="btn-group btn-group-sm">
			           	<div className="btn-group btn-group-sm">
								    <button className="btn btn-outline-success" >
								      <i className="fas fa-edit me-1"></i> 
								    </button>
								    <a type="button" className="btn_modal btn btn-outline-primary" onClick={()=>handleModal("showMambra", item.id)}>
								      <i className="fas fa-eye me-1"></i> 
								    </a>
								    <button className="btn btn-outline-danger" >
								      <i className="fas fa-trash-alt me-1"></i> 
								    </button>
								  </div>
			          </div>
			        </td>
			      </tr>
			    );});

		    const renderBaptiseRadio = () => (
		    <>
		      <div className="mb-2">
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="baptise" 
		            id="allmixed" 
		            value=""
		            onChange={handleFilterBaptiseChange}
		          />
		          <label className="form-check-label" htmlFor="allmixed">
		            Tous
		          </label>
		        </div>
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="baptise" 
		            id="baptise" 
		            value="1" 
		            onChange={handleFilterBaptiseChange}
		          />
		          <label className="form-check-label" htmlFor="baptise">
		            Baptisé
		          </label>
		        </div>
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="baptise" 
		            id="unbaptise" 
		            value="0" 
		            onChange={handleFilterBaptiseChange}
		          />
		          <label className="form-check-label" htmlFor="unbaptise">
		            Non baptisé
		          </label>
		        </div>
		      </div>
		    </>
		  );

		      const handleFilterBaptiseChange = (e) => {
				    const baptise = e.target.value;
				    setFilters(prevFilters => {
				      return {
				        ...prevFilters,
				        baptise
				      };
				    });
				  }

				const renderGenderRadio = () => (
		    <>
		      <div className="mb-2">
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="sexe" 
		            id="allsexe" 
		            value="" 
		            onChange={handleFilterGenderChange} 
		          />
		          <label className="form-check-label" htmlFor="allsexe">
		            Tous
		          </label>
		        </div>
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="sexe" 
		            id="masculin" 
		            value="masculin" 
		            onChange={handleFilterGenderChange} 
		          />
		          <label className="form-check-label" htmlFor="masculin">
		            Masculin
		          </label>
		        </div>
		        <div className="form-check">
		          <input 
		            className="form-check-input" 
		            type="radio" 
		            name="sexe" 
		            id="feminin" 
		            value="feminin" 
		            onChange={handleFilterGenderChange} 
		          />
		          <label className="form-check-label" htmlFor="feminin">
		            Féminin
		          </label>
		        </div>
		      </div>
		    </>
		  );

				 const handleFilterGenderChange = (e) => {
			    const gender = e.target.value;
			    setFilters(prevFilters => {
			      return {
			        ...prevFilters,
			        sexe: gender
			      };
			    });
			  }

			  const renderTrancheAgeFilter = () => (
			    <>
			      <div className="mb-3">
			        {trancheAgeOptions.map((option) => (
			          <div className="form-check" key={option.value}>
			            <input
			              className="form-check-input"
			              type="checkbox"
			              id={`trancheAge-${option.value}`}
			              value={option.value}
			              onChange={handleTrancheAgeChange}
			            />
			            <label className="form-check-label" htmlFor={`trancheAge-${option.value}`}>
			              {option.label}
			            </label>
			          </div>
			        ))}
			      </div>
			    </>
			  );

			    const handleTrancheAgeChange = (event) => {
				    console.log("filters");
				    const { value, checked } = event.target;
				    setFilters(prevFilters => ({
				      ...prevFilters,
				      trancheAge: checked
				        ? [...prevFilters.trancheAge, value]
				        : prevFilters.trancheAge.filter(age => age !== value)
				    }));
				  };

				   const handleSearch = (e) => {
					    const search = e.target.value.toLowerCase();
					    setFilters(prevNameFilter => {
					      return {
					        ...prevNameFilter,
					        prenom: search
					      };
					    });
					  }


					     const Modal = ({ children, isOpen, onClose }) => {
					      if (!isOpen) return null;

					      return (
					        <div className="modal-overlay">
					          <div className="modal-content">
					            <button onClick={onClose}>Close</button>
					            {children}
					          </div>
					        </div>
					      );
					    };

					    function handleModal(action, id = null){

					    	if(action == 'showMambra' && id != null){
					    		alert('ato za zao');
					    		Modal("<h1>ceci est un modal</h1>", true,closeModal );
					    		openModal();

					    	}

					    }

        return (
						<div>
						  <div className="row">
						    <div className="col-md-3">
						      <div className="menu-lateral border border-danger p-3 rounded">


						      <h3>Filtre <span className="badge bg-danger">{mambras.length}</span> </h3>
						          <h4>Recherche</h4>
						      <div class="d-flex justify-content-center">
				            <div class="p-2 bd-highlight"><input type="text" onChange={handleSearch} className="form-control" /></div>
				          </div>
						          <h4>Gender</h4>
								    <div >
								      {renderGenderRadio()}
								    </div>
								    <h4>Baptism</h4>
								    <div >
								      {renderBaptiseRadio()}
								    </div>
								    <h4>Tranche d'age</h4>
								    <div >
								      {renderTrancheAgeFilter()}
								    </div>
								    <div className="mt-3 mb-3">
								    <h4>Order by prénom</h4>
								    
								    </div>
								      </div>
						    </div>
						    <div className="col-md-9">

						      <table className="data-table">
						        <thead>
						          <tr>
						            <th>Nom</th>
						            <th>Prénom</th>
						            <th>Sexe</th>
						            <th>Baptisé</th>
						            <th>Actions</th>
						          </tr>
						        </thead>
						        <tbody>
						          {listeMambra}
						        </tbody>
						      </table>
						    </div>
						  </div>
						</div>
        );
      }

      const container = document.getElementById('root');
      const root = ReactDOM.createRoot(container);
      root.render(<DataTable />);
    </script>
{% endblock %}
